
import { useState } from 'react';
import { Header } from '@/components/Header';
import { Footer } from '@/components/Footer';
import { useAppContext } from '@/contexts/AppContext';
import { useSupabase } from '@/contexts/SupabaseContext';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Link, useNavigate } from 'react-router-dom';
import { Checkbox } from '@/components/ui/checkbox';
import { useToast } from '@/components/ui/use-toast';

const Register = () => {
  const { language, t } = useAppContext();
  const { signUp } = useSupabase();
  const navigate = useNavigate();
  const { toast } = useToast();
  
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [agreedToTerms, setAgreedToTerms] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', email);
    
    // Validation
    if (!firstName || !lastName || !email || !phone || !password || !confirmPassword) {
      toast({
        title: language === 'ru' ? '–û—à–∏–±–∫–∞' : '“ö–∞—Ç–µ',
        description: language === 'ru' 
          ? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è' 
          : '–ë–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑',
        variant: 'destructive'
      });
      return;
    }
    
    if (password !== confirmPassword) {
      toast({
        title: language === 'ru' ? '–û—à–∏–±–∫–∞' : '“ö–∞—Ç–µ',
        description: language === 'ru' 
          ? '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç' 
          : '“ö“±–ø–∏—è —Å”©–∑–¥–µ—Ä —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ',
        variant: 'destructive'
      });
      return;
    }
    
    if (!agreedToTerms) {
      toast({
        title: language === 'ru' ? '–û—à–∏–±–∫–∞' : '“ö–∞—Ç–µ',
        description: language === 'ru' 
          ? '–í—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è' 
          : '–ü–∞–π–¥–∞–ª–∞–Ω—É —à–∞—Ä—Ç—Ç–∞—Ä—ã–º–µ–Ω –∫–µ–ª—ñ—Å—É—ñ“£—ñ–∑ –∫–µ—Ä–µ–∫',
        variant: 'destructive'
      });
      return;
    }
    
    setIsSubmitting(true);
    
    try {
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Supabase...');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Supabase
      const { data, error } = await signUp(email, password);
      
      console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç Supabase:', { data, error });
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
        let errorMessage = language === 'ru' 
          ? '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' 
          : '–¢—ñ—Ä–∫–µ–ª—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã';
          
        if (error.message.includes('User already registered')) {
          errorMessage = language === 'ru' 
            ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω' 
            : '–û—Å—ã email-–º–µ–Ω –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ–∞–∑—ñ—Ä–¥—ñ“£ ”©–∑—ñ–Ω–¥–µ —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω';
        } else if (error.message.includes('Invalid email')) {
          errorMessage = language === 'ru' 
            ? '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email' 
            : 'Email —Ñ–æ—Ä–º–∞—Ç—ã –¥“±—Ä—ã—Å –µ–º–µ—Å';
        } else if (error.message.includes('Password')) {
          errorMessage = language === 'ru' 
            ? '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' 
            : '“ö“±–ø–∏—è —Å”©–∑ –∫–µ–º—ñ–Ω–¥–µ 6 —Ç–∞“£–±–∞–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫';
        }
        
        toast({
          title: language === 'ru' ? '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' : '–¢—ñ—Ä–∫–µ–ª—É “õ–∞—Ç–µ—Å—ñ',
          description: errorMessage,
          variant: 'destructive'
        });
        
        setIsSubmitting(false);
        return;
      }
      
      console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', data);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      if (data.user) {
        console.log('üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è firstName, lastName, phone
        // –≤ —Ç–∞–±–ª–∏—Ü—É profiles, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      }
      
      toast({
        title: language === 'ru' ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞' : '–¢—ñ—Ä–∫–µ–ª—É —Å”ô—Ç—Ç—ñ',
        description: language === 'ru' 
          ? '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞' 
          : '–ê–∫–∫–∞—É–Ω—Ç—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω –ø–æ—à—Ç–∞“£—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑'
      });
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –≤—Ö–æ–¥–∞
      navigate('/confirm-email');
      
    } catch (error) {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      
      toast({
        title: language === 'ru' ? '–û—à–∏–±–∫–∞' : '“ö–∞—Ç–µ',
        description: language === 'ru' 
          ? '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.' 
          : '–ö“Ø—Ç–ø–µ–≥–µ–Ω “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. “ö–∞–π—Ç–∞–¥–∞–Ω –∫”©—Ä—ñ“£—ñ–∑.',
        variant: 'destructive'
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      <main className="flex-1 container mx-auto px-4 py-8 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardHeader className="space-y-1">
            <CardTitle className="text-2xl font-bold">
              {t('register')}
            </CardTitle>
            <CardDescription>
              {language === 'ru' 
                ? '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
                : '–•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä –æ—Ä–Ω–∞–ª–∞—Å—Ç—ã—Ä—É “Ø—à—ñ–Ω –∞–∫–∫–∞—É–Ω—Ç –∂–∞—Å–∞“£—ã–∑'}
            </CardDescription>
          </CardHeader>
          <form onSubmit={handleSubmit}>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="first-name">
                    {language === 'ru' ? '–ò–º—è' : '–ê—Ç—ã'}
                  </Label>
                  <Input 
                    id="first-name" 
                    value={firstName}
                    onChange={(e) => setFirstName(e.target.value)}
                    disabled={isSubmitting}
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="last-name">
                    {language === 'ru' ? '–§–∞–º–∏–ª–∏—è' : '–¢–µ–≥—ñ'}
                  </Label>
                  <Input 
                    id="last-name" 
                    value={lastName}
                    onChange={(e) => setLastName(e.target.value)}
                    disabled={isSubmitting}
                  />
                </div>
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input 
                  id="email" 
                  type="email" 
                  placeholder="email@example.com" 
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  disabled={isSubmitting}
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="phone">
                  {language === 'ru' ? '–¢–µ–ª–µ—Ñ–æ–Ω' : '–¢–µ–ª–µ—Ñ–æ–Ω'}
                </Label>
                <Input 
                  id="phone" 
                  placeholder="+7 (___) ___-__-__" 
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                  disabled={isSubmitting}
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="password">
                  {language === 'ru' ? '–ü–∞—Ä–æ–ª—å' : '“ö“±–ø–∏—è —Å”©–∑'}
                </Label>
                <Input 
                  id="password" 
                  type="password" 
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  disabled={isSubmitting}
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="confirm-password">
                  {language === 'ru' ? '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' : '“ö“±–ø–∏—è —Å”©–∑–¥—ñ —Ä–∞—Å—Ç–∞“£—ã–∑'}
                </Label>
                <Input 
                  id="confirm-password" 
                  type="password" 
                  value={confirmPassword}
                  onChange={(e) => setConfirmPassword(e.target.value)}
                  disabled={isSubmitting}
                />
              </div>
              
              <div className="flex items-start space-x-2">
                <Checkbox 
                  id="terms" 
                  checked={agreedToTerms}
                  onCheckedChange={(checked) => setAgreedToTerms(checked === true)}
                  disabled={isSubmitting}
                />
                <label
                  htmlFor="terms"
                  className="text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                >
                  {language === 'ru' 
                    ? '–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å ' 
                    : '–ú–µ–Ω –∫–µ–ª—ñ—Å–µ–º—ñ–Ω '} 
                  <Link to="/terms" className="text-primary hover:underline">
                    {language === 'ru' 
                      ? '—É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è' 
                      : '–ø–∞–π–¥–∞–ª–∞–Ω—É —à–∞—Ä—Ç—Ç–∞—Ä—ã–º–µ–Ω'}
                  </Link>
                </label>
              </div>
            </CardContent>
            <CardFooter className="flex flex-col space-y-4">
              <Button 
                className="w-full" 
                type="submit"
                disabled={isSubmitting}
              >
                {isSubmitting ? 
                  (language === 'ru' ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–¢—ñ—Ä–∫–µ–ª—É...') : 
                  (language === 'ru' ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–¢—ñ—Ä–∫–µ–ª—É')
                }
              </Button>
              <div className="text-center text-sm">
                {language === 'ru' ? '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?' : '–ê–∫–∫–∞—É–Ω—Ç—ã“£—ã–∑ –±–∞—Ä –º–∞?'}{' '}
                <Link 
                  to="/login"
                  className="text-primary hover:underline"
                >
                  {language === 'ru' ? '–í–æ–π—Ç–∏' : '–ö—ñ—Ä—É'}
                </Link>
              </div>
            </CardFooter>
          </form>
        </Card>
      </main>
      <Footer />
    </div>
  );
};

export default Register;
